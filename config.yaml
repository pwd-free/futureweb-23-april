baseURL: http://futurewebdesign.au
title: Future Web Design
description: Future Web Design provides articles on modern web technologies and latest new in the coding space.
# alternate copyright company text
# copyright: Sean Emerson
# controls number of pages displayed on list pages
paginate: 5
# controls the summary length on list pages
summaryLength: 7
# this is required so that Hugo will render markdown to HTML
markup:
  goldmark:
    renderer:
      unsafe: true
  highlight:
    anchorLineNos: false
    codeFences: true
    guessSyntax: false
    hl_Lines: ""
    lineAnchors: ""
    lineNoStart: 1
    lineNos: false
    lineNumbersInTable: true
    noClasses: false # false needs a stylesheet
    noHl: false
    style: monokai
    tabWidth: 4
enableGitInfo: true
# config for related posts
related:
  #pages which are newer than the current page
  includeNewer: true
  # search terms
  indices:
  - name: categories
    weight: 100
  - name: tags
    weight: 100
  threshold: 80
  # lowercase search query
  toLower: true

module:
  imports:
  - path: github.com/future-wd/hugo-responsive-images
  - path: github.com/future-wd/hugo-seo

params:
  dateFormat: "02/01/2006"
  widgets: 
  - search
  - recent-posts
  - related-posts
  - post-categories
  - post-tags
  # control the number of items in widgets
  relatedPosts: 5
  recentPosts: 5
  postTags: 10
  youtubeChannel: https://www.youtube.com/channel/UCtlnMUJr68ytsr11_dv_elg

  image:
    widths: [600, 900, 1300] # widths to generate if widths not specified
    # shortcode_widths: [600, 900, 1300] # custom widths for shortcode use in markdown files. If unset defaults to widths
    # render_hook_widths: [600, 900, 1300] # custom widths for render hook use in markdown files. If unset defaults to shortcode widths
    densities: [1,2] # densities which are output when an image width is specified
    formats: [webp, original] # set output formats. options are `original`, `bmp`, `gif`, `jpeg`, `jpg`, `png`, `tif`, `tiff`, and `webp`. In order of least supported to most supported. For "image_only" the first format will be used.
    class: img-fluid # default image class if no class is specified
    figure_class: "figure img-fluid" # default figure class
    figure_image_class: "figure-img img-fluid" # default figure image class (appended to image class) ## USE .class to override outside of config
    figcaption_class: figure-caption # default figcaption class
    figcaption_title_h: 4 # heading level for figure title
    render_hook_wrapper_class: img-wrapper # image wrapper class for render hook
    shortcode_wrapper_class: img-wrapper # image wrapper class for shortcode
    loading: lazy # or auto/lazysizes # lazy/auto are for stock browser behavior, lazysizes will use lazysizes.js
    render_hook: true # set to false to disable included markdown image render hook
                      # override by setting imageRenderHook: true/false in front matter
    output: figure
    # placeholder: lqip # or dominant/file_name  (see colours set up in assets/images/placeholder-colors) use filename without .gif
    lqip_blur_amount: 5 # apply gaussian blur amount of 5 to lqip
                      # may need to be increased at a page level for larger images
    lqip_div_amount: 5 # lqip is 5x smaller than the smallest image in srcset
    gif_div_amount: 10 # single color gif placeholder is 10x smaller than smallest image in srcset
    # provider: netlify # currently only supports netlify image processing.
    suppress_width_warning: false # turn of warning that image cannot be resized to the widths spec
  
  
  seo:
    generate: # choose which tags are generated
      title: true
      meta: true
      twitter: true
      og: true
      jsonld:
        article: true
        breadcrumbs: true
    title_tag:
      separator: "|"
      home_text: "" # this text is added to the title tag on home page
    og_article_types: [post, posts, blog, news, article, articles, event, events, course, courses]
    jsonld_article_types: [article, articles]
    jsonld_news_article_types: [news, updates]
    jsonld_blog_posting_types: [post, posts, blog]
    # page or site
    image: # set default here, page override can be set. 
    private: false # set here or per page to modify robots meta, remove sitemap, robots and rss 
